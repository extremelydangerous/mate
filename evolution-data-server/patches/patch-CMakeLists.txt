$NetBSD$

--- CMakeLists.txt.orig	2017-05-08 12:04:10.000000000 +0000
+++ CMakeLists.txt
@@ -121,16 +121,16 @@ set(json_glib_minimum_version 1.0.4)
 set(webkit2gtk_minimum_version 2.11.91)
 
 # Load modules from the source tree
-set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules)
+set (CMAKE_MODULE_PATH "/usr/work/mate/evolution-data-server/work/.buildlink/cmake-Modules" "/usr/work/mate/evolution-data-server/work/.buildlink/cmake-Modules" ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules)
 
 set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 # Packagers might want to need different settings for the RPATH related things
 # From experience, especially CMAKE_BUILD_WITH_INSTALL_RPATH might need to be
 # switched to ON, if CMake fails to set the right values during make install
-set(CMAKE_SKIP_RPATH OFF)
-set(CMAKE_SKIP_BUILD_RPATH OFF CACHE BOOL INTERNAL)
-set(CMAKE_BUILD_WITH_INSTALL_RPATH OFF CACHE BOOL INTERNAL)
-set(CMAKE_INSTALL_RPATH_USE_LINK_PATH ON CACHE BOOL INTERNAL)
+set(CMAKE_SKIP_RPATH ON)
+set(CMAKE_SKIP_BUILD_RPATH ON CACHE BOOL INTERNAL)
+set(CMAKE_BUILD_WITH_INSTALL_RPATH ON CACHE BOOL INTERNAL)
+set(CMAKE_INSTALL_RPATH_USE_LINK_PATH OFF CACHE BOOL INTERNAL)
 # CMAKE_INSTALL_RPATH is set below
 
 # CMake modules
@@ -276,7 +276,7 @@ setup_build_flags(${ENABLE_MAINTAINER_MO
 CHECK_INCLUDE_FILE(com_err.h HAVE_COM_ERR_H)
 CHECK_INCLUDE_FILE(et/com_err.h HAVE_ET_COM_ERR_H)
 CHECK_INCLUDE_FILE(sys/wait.h HAVE_SYS_WAIT_H)
-CHECK_INCLUDE_FILE(wspiapi.h HAVE_WSPIAPI_H)
+#CHECK_INCLUDE_FILE(wspiapi.h HAVE_WSPIAPI_H)
 CHECK_INCLUDE_FILE(zlib.h HAVE_ZLIB_H)
 CHECK_FUNCTION_EXISTS(fsync HAVE_FSYNC)
 CHECK_FUNCTION_EXISTS(strptime HAVE_STRPTIME)
@@ -296,7 +296,7 @@ if(NOT PERL)
 	message(FATAL_ERROR "You need perl to build ${PROJECT_NAME}")
 endif(NOT PERL)
 
-find_program(PYTHON python)
+find_program(PYTHON python2.7)
 if(NOT PYTHON)
 	message(FATAL_ERROR "You need python to build ${PROJECT_NAME}")
 endif(NOT PYTHON)
