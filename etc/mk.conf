##########FOR APPTEM BUILD###############
MKNPF=				no
MKZFS=				no
MKRUMP=				no
MKIPFILTER=			no
MKATF=				no
MKYUA=				no
SLOPPY_FLIST=			yes
NOGCCERROR=			yes
PKGSRC_FORTRAN=			gfortran
GFORTRAN_VERSION=		48
UPDATE_TARGET=			package
FAM_DEFAULT=			gamin
PREFER_NATIVE=			yes
X11_TYPE:=			native
LOCALBASE?=			/usr/pkg
INSTALL_UNSTRIPPED=		yes
PTHREAD_TYPE=			native
#############COMPILER###################
NOSSP=				yes
PKGSRC_USE_SSP=			no
BUILDLINK_TRANSFORM+=		rm:-fstack-protector-strong
BUILDLINK_TRANSFORM+=		rm:-fstack-protector
BUILDLINK_TRANSFORM+=		rm:-Werror
BUILDLINK_TRANSFORM+=		rm:-Wno-register
BUILDLINK_TRANSFORM+=		rm:-g
BUILDLINK_TRANSFORM+=		rm:-D_FORTIFY_SOURCE=2
.if empty(PKGPATH:Mpkgtools/*)
.if empty(PKGPATH:M*/gsed)
USE_TOOLS+=	gsed
.if empty(PKGPATH:M*/gtar)
USE_TOOLS+=	gtar
.endif
.endif
.endif
.if exists(/usr/bin/clang) && empty(GCC_REQD)
CLANGBASE?=		/usr
.endif
.if !empty(CLANGBASE)
HAVE_LLVM=	yes
.if (${CLANGBASE} == /usr/pkg) && !exists(/usr/pkg/bin/clang)
BROKEN=		MUST INSTALL lang/clang FIRST
.endif
SHUTUP_CC+=	-Wno-everything
SHUTUP_CXX=	-Wno-everything
SHUTUP_CC+=	-fbracket-depth=1024
SHUTUP_CC+=	-fno-stack-protector
PKGSRC_COMPILER?=	clang gfortran
.else
##### SHUT UP GCC COMPILER #####
SHUTUP_CC+=	-w
SHUTUP_CC+=	-fno-stack-protector
SHUTUP_CC+=	-Wno-error
SHUTUP_CC+=	-Wno-error=format-extra-args
SHUTUP_CC+=	-Wno-deprecated-declarations
SHUTUP_CC+=	-Wno-char-subscripts
SHUTUP_CC+=	-Wno-unused-but-set-variable
SHUTUP_CC+=	-Wno-char-subscripts
SHUTUP_CC+=	-Wno-maybe-uninitialized
SHUTUP_CC+=	-Wno-missing-prototypes
SHUTUP_CC+=	-Wno-unused-variable
SHUTUP_CC+=	-Wno-strict-prototypes
SHUTUP_CC+=	-Wno-unused-function
SHUTUP_CC+=	-Wno-error=format-zero-length
SHUTUP_CC+=	-Wno-error=format=
SHUTUP_CXX+=	-fno-stack-protector
.if !empty(PKGPATH:M*/cairo*)
GCC_REQD:=	5.0
.endif
PKGSRC_COMPILER?=	gcc gfortran
.endif
##### SHUT UP COMPILER #####
CWRAPPERS_APPEND.cc+=	${SHUTUP_CC} -pipe
CWRAPPERS_APPEND.cxx+=	${SHUTUP_CXX} -pipe
#CCACHE_DIR=			/var/ccache
PKGSRC_USE_FORTIFY=		no
PKG_INFO?=			/usr/sbin/pkg_info
DISTDIR?=			/fserver/distfiles
LOCALPATCHES?=			/usr/localpatches-${OS_VERSION}
WRKOBJDIR?=                     /disk/RPI/work
PREFIX?=			/usr/pkg
ALLOW_VULNERABLE_PACKAGES=	yes
PKGPATH?=			""
WARNS=				0
PKGREPOSITORY?=			/usr/${OPSYS}-${OS_VERSION}/packages
STAGE_PKGFILE=			${PKGREPOSITORY}/${FILEBASE}-${PKGVERSION}${PKG_SUFX}
#INSTALL_TEMPLATES+=		/etc/mk/updatepkgdb
#DEINSTALL_TEMPLATES+=		/etc/mk/updatepkgdb

CXXFLAGS+=			-Wno-narrowing
LDFLAGS+=			-Wl,--no-keep-memory -Wl,--reduce-memory-overheads

USE_BUILTIN.pthread=yes
PREFER_NATIVE_PTHREADS=yes

.if !empty(PKGPATH:Mwww/firefox)
CONFIGURE_ARGS+=	--disable-skia
CONFIGURE_ARGS+=	--disable-skia-gpu
CONFIGURE_ARGS+=	--with-system-theora
CONFIGURE_ARGS+=	--with-system-vorbis
.include		 "../../multimedia/libtheora/buildlink3.mk"
.include		 "../../audio/libvorbis/buildlink3.mk"
.endif


.if ${PKGPATH:M*/libfreehand}
CXXFLAGS+=			-std=c++11
.endif
#######BUILTINS YESSSSSSS############
USE_BUILTIN.sqlite3:=		yes
USE_BUILTIN.gettext:=		yes
USE_BUILTIN.openssl:=		yes
USE_BUILTIN.freetype2:=		no
USE_BUILTIN.fontconfig:=	no
USE_BUILTIN.MesaLib:=		yes
USE_BUILTIN.expat:=		yes
USE_BUILTIN.mDNSResponder:=	yes
USE_BUILTIN.dl:=		yes
USE_BUILTIN.xz:=		yes
USE_BUILTIN.zlib:=		yes
USE_BUILTIN.ncurses:=		yes

############LICENCES#############
ACCEPTABLE_LICENSES+=		mozilla-trademark-license
ACCEPTABLE_LICENSES+=		autodesk-license
ACCEPTABLE_LICENSES+=		lha-license
ACCEPTABLE_LICENSES+=		quakedata-license
ACCEPTABLE_LICENSES+=		gnu-agpl-v3
ACCEPTABLE_LICENSES+=		sun-jdk6-license
ACCEPTABLE_LICENSES+=		eclipse-license
ACCEPTABLE_LICENSES+=		rar-license
ACCEPTABLE_LICENSES+=		lame-license
ACCEPTABLE_LICENSES+=		flash-license
ACCEPTABLE_LICENSES+=		adobe-flashsupport-license
ACCEPTABLE_LICENSES+=		mplayer-codec-license
ACCEPTABLE_LICENSES+=		sun-jre6-license
ACCEPTABLE_LICENSES+=		sun-openlook-license
ACCEPTABLE_LICENSES+=           sendmail-license
ACCEPTABLE_LICENSES+=		xv-license
ACCEPTABLE_LICENSES+=		fraunhofer-license

###############################################
PKG_RESUME_TRANSFERS=		YES
PATCH_FUZZ_FACTOR=		-F2

############OPTIONS###############
PKG_DEFAULT_OPTIONS=			-alsa -esound -inet6 -gssapi -nas
PKG_DEFAULT_OPTIONS+=			-polkit -consolekit -opengl faac
PKG_DEFAULT_OPTIONS+=			sqlite3 x11 pgsql pulseaudio cups 
PKG_DEFAULT_OPTIONS+=			gtk3 gtk2 -dnssd -kerberos fuse
PKG_DEFAULT_OPTIONS+=			-gcc-graphite -gcc-inplace-math
PKG_DEFAULT_OPTIONS+=			pdf -avahi

.if !empty(MACHINE_ARCH:Mearm*)
.if exists(/usr/bin/clang)
#CFLAGS+=				-mcpu=cortex-a8
.endif
MAKE_JOBS?=				4
PKG_DEFAULT_OPTIONS+=			-java
.endif
.if !empty(MACHINE_ARCH:Mi386)
CFLAGS+=				-march=i586
NCPU!=		echo `/sbin/sysctl -n hw.ncpu` + 2 | /usr/bin/bc
MAKE_JOBS?=				${NCPU}
.endif
MAKE_JOBS_SAFE=				yes

PGSQL_VERSION_DEFAULT=			94
PGSQL_VERSION_REQD=			94
PKG_OPTIONS.MesaLib=			-llvm
PKG_OPTIONS.gstreamer=			introspection
PKG_OPTIONS.qemu=			gtk3
PKG_OPTIONS.pidgin=			-gtkspell
PKG_OPTIONS.samba=			-ads -ldap
#PKG_OPTIONS.mate=			extras
PKG_OPTIONS.mate-settings-daemon=	-nss
PKG_OPTIONS.wine=			dbus -cups
PKG_OPTIONS.mpv=			-lua
PKG_OPTIONS.ssl=			zlib
PKG_OPTIONS.mupdf=			curl glfw
PKG_OPTIONS.cyrus-imapd=		pgsql
PKG_OPTIONS.rbldnsd=			zlib rbldnsd-master-dump
PKG_OPTIONS.sox=			lame
PKG_OPTIONS.xulrunner=			gnome
PKG_OPTIONS.ffmpeg=			lame ass  theora vorbis x264 xvid
PKG_OPTIONS.ffmpeg3+=			ass doc fdk-aac fontconfig freetype lame
PKG_OPTIONS.ffmpeg3+=			opencore-amr openssl theora vorbis x264 x265 xcb xvid
PKG_OPTIONS.sendmail=          		sasl
PKG_OPTIONS.boehm-gc=			threads
PKG_OPTIONS.pulseaudio=			-fftw
PKG_OPTIONS.SDL=			-esound -nas
PKG_OPTIONS.thunderbird=		gtk3 -gtk2
PKG_OPTIONS.gtk2=			cups
PKG_OPTIONS.gtk3=			cups
PKG_OPTIONS.vlc=			gnome
PKG_OPTIONS.xterm=			pcre
PKG_OPTIONS.firefox=			-webrtc -oss -gtk2 gtk3
PKG_OPTIONS.drupal=			-apache sqlite pgsql mysql unicode
PKG_OPTIONS.lighttpd=			fam bzip2
PKG_OPTIONS.webkit-gtk=			-webkit-jit
PKG_OPTIONS.librsvg=			-introspection
PKG_OPTIONS.gdm=			consolekit

PKG_OPTIONS.qt4=			cups gtk2
#PKG_OPTIONS.graphviz=			rsvg

##########DEFINES################

OS_VERSION?=	""

.if ${PKGPATH:M*/mate-applets} || \
	${PKGPATH:M*/nss} || \
	${PKGPATH:M*/libusb*} || \
	${PKGPATH:M*/mate-screensaver*} || \
	${PKGPATH:Marchivers/bzip2} || \
	${PKGPATH:M*/cdrtools*} || \
	${PKGPATH:M*/groff*} || \
	${PKGPATH:M*/sudo*} || \
	${PKGPATH:M*/muparser*} || \
	${PKGPATH:M*/gnutls*} || \
	${PKGPATH:M*/ffmpeg*} || \
	${PKGPATH:M*/tightvnc*} || \
	${PKGPATH:M*/shared-mime-info*} || \
	${PKGPATH:M*/vnc*} || \
	${PKGPATH:M*/openssl*} || \
	${PKGPATH:M*/imap*} || \
	${PKGPATH:M*/pth*} || \
	${PKGPATH:M*/librsvg*} || \
	${PKGPATH:M*/pulseaudio} || \
	${PKGPATH:M*/GConf-ui*} || \
	${PKGPATH:M*/py-cairo} || \
	${PKGPATH:M*/p5-*} || \
	${PKGPATH:M*/pulseaudio*} || \
	${PKGPATH:M*/evolution} || \
	${PKGPATH:M*/opencore-amr} || \
	${PKGPATH:M*/libsecret*} || \
	${PKGPATH:M*/gdk-pixbuf*} || \
	${PKGPATH:M*/netpbm*} || \
	${PKGPATH:M*/gdbm}
MAKE_JOBS=			1
MAKE_JOBS_SAFE=			no
.endif

.if !empty(PKGPATH:M*/gimp)
USE_LANGUAGES+= c++11 c
CONFIGURE_ARGS:=${CONFIGURE_ARGS:S/--disable-python/--enable-python/}
.include "../../graphics/aalib/buildlink3.mk"
.include "../../x11/py-gtk2/buildlink3.mk"
.include "../../textproc/iso-codes/buildlink3.mk"
.include "../../print/ghostscript-gpl/buildlink3.mk"
.include "../../print/poppler-glib/buildlink3.mk"
.include "../../archivers/libarchive/buildlink3.mk"
.include "../../devel/pth/buildlink3.mk"
.include "../../devel/ncurses/buildlink3.mk"
.include "../../sysutils/gvfs/buildlink3.mk"
.include "../../sysutils/gnome-mount/buildlink3.mk"
.include "../../mk/fuse.buildlink3.mk"
PLIST_SRC+=	PLIST PLIST.lzt
.endif

.if ${PKGPATH:Msysutils/hal}
CONFIGURE_ARGS+=		--disable-console-kit
CONFIGURE_ARGS+=		--disable-policy-kit
.endif

.if ${PKGPATH:Mmeta-pkgs/gnome}
DEPENDS+=       mozilla-rootcerts:../../security/mozilla-rootcerts
.endif

.if ${PKGPATH:M*/webkit24-gtk*}
CONFIGURE_ARGS+=       --disable-silent-rules
SUBST_CLASSES+=		libatomic
SUBST_MESSAGE+=		FIX LIBATOMIC OPS change -latomic to -latomic_ops
SUBST_STAGE.libatomic=	pre-configure
SUBST_FILES.libatomic=	configure
SUBST_SED.libatomic=	-e "s/-latomic/-latomic_ops/"
.include "../../devel/libatomic_ops/buildlink3.mk"
.endif

.if ${PKGPATH} == "devel/anjuta"
CFLAGS+=			-Wno-error=format-extra-args
CFLAGS+=			-Wno-deprecated-declarations
CFLAGS+=			-Wno-char-subscripts
CFLAGS+=			-Wno-unused-but-set-variable
CFLAGS+=			-Wno-char-subscripts
CFLAGS+=			-Wno-maybe-uninitialized
CFLAGS+=			-Wno-missing-prototypes
CFLAGS+=			-Wno-unused-variable
CFLAGS+=			-Wno-strict-prototypes
CFLAGS+=			-Wno-unused-function
CFLAGS+=			-Wno-error=format-zero-length
CFLAGS+=			-Wno-error=format=
.endif

.if	${PKGPATH:M*/libtheora} || \
	${PKGPATH:M*/x264-devel} || \
	${PKGPATH:Mmultimedia/ffmpeg*}
CONFIGURE_ARGS+=	--disable-asm
.endif

.if ${PKGPATH:M*/libvpx*}
CONFIGURE_ARGS+=	--target=generic-gnu
.endif

.if ${PKGPATH:M*/ruby*}
.if !empty(MACHINE_ARCH:Mearm*)
#BROKEN=			DOES NOT BUILD ON ARM
.endif
CONFIGURE_ARGS+=	--disable-dtrace
.endif

.if ${PKGPATH} == "*/aumix-gtk"
.include		"../../graphics/hicolor-icon-theme/buildlink3.mk"
.endif

.if !emtpy(PKGPATH:M*/opencv)
CMAKE_ARGS+=	-DCV_DISABLE_OPTIMIZATION=ON
CMAKE_ARGS+=	-DCPU_BASELINE_DISABLE=SSE,SSE2
.endif

.if ${PKGPATH:Mmultimedia/mpv*}
.include "../../databases/db4/buildlink3.mk"
.endif

.if ${PKGPATH:M*/sox*} || \
	${PKGPATH:M*/gnome-media*} || \
	${PKGPATH:M*/libmatemixer*}
.include "../../mate/pulseaudio/buildlink3.mk"
.endif

rmstage: build-clean
	@echo rmstage ...  DONE
	cd ${WRKDIR};\
	rm -rf .install_done .destdir .build_done .pkginstall .pkgdb .PLIST* .PLIST_deps .package_done
	rm -f ${STAGE_PKGFILE}


clrwork:
	rm -vfr ${WRKOBJDIR}/*

showpkgname:
	@echo ${PKGNAME}


.if     !empty(PKGPATH:M*/flac*)
CONFIGURE_ARGS+=	--disable-asm-optimizations
.endif

.if     !empty(PKGPATH:Mlang/gcc*)
CONFIGURE_ARGS+=	--disable-bootstrap
.endif

.if     !empty(PKGPATH:Mmail/thunderbird)
#CLANGBASE=	/usr/pkg
.endif

.if     !empty(PKGPATH:Mmultimedia/totem)
DEPENDS+=gstreamer0.10-plugins>0:../../meta-pkgs/gstreamer0.10-plugins
.endif

.if     ${PKGPATH:M*/avahi*}
PKG_FAIL_REASON=        "NO USE AVAHI"
.endif

.if     ${PKGPATH:M*/cups15*}
PKG_FAIL_REASON=        "USE CUPS 2.0 INSTEAD"
.endif

.if     ${PKGPATH:M*/policykit*}
PKG_FAIL_REASON=        "DO NOT BUILD with ${PKGPATH}"
.endif
